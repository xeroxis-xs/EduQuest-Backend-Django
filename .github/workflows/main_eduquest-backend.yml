# .github/workflows/ci.yml

name: Build, Test, and Push Container Image to Docker Hub

env:
  AZURE_WEBAPP_NAME: eduquest-backend
  DOCKERHUB_REPO: xeroxisxs/eduquest-backend-django

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Set Environment Variables
        run: |
          echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV
          echo "DJANGO_SETTINGS_MODULE=app.core.settings.test" >> $GITHUB_ENV

      - name: Run Migrations
        run: |
          python manage.py migrate

      - name: Run Tests
        run: |
          python manage.py test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and Push Docker Image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}
            ${{ env.DOCKERHUB_REPO }}:latest
          file: ./Dockerfile
